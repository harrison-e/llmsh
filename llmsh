#!/usr/bin/env python3

import requests, json, subprocess

# Obtain OpenAI API key from `API_KEY`
api_key_file = open("API_KEY", "rt")
API_KEY = api_key_file.readline().strip()

# Generate BASH command from user description
def generate_command(description):
    prompt = """Your task is to generate BASH commands for a user.
    Your response should only include the appropriate command, in plaintext
    with no backticks, for the given description:\n"""

    url = "https://api.openai.com/v1/chat/completions"
    headers = {
        "Content-Type": "application/json",
        "Authorization": f"Bearer {API_KEY}"
    }
    data = {
        "model": "gpt-4o-mini",
        "messages": [
            {
                "role": "user",
                "content": f"{prompt} {description}"
            }
        ]
    }

    response = requests.post(url, headers=headers, json=data)

    if response.status_code == 200:
        response_json = response.json()
        command = response_json["choices"][0]["message"]["content"].strip()
        return command 
    else:
        print(f"Error: {response.status_code} - {response.text}")
        return None

# Main
if __name__ == "__main__":
    description = input("\033[1mWhat would you like to do?\n\033[0m")
    command = generate_command(description)

    if command:
        print(f"\033[1mCommand generated:\n\033[0m`{command}`")
        run = input("\033[1mWould you like to run the generated command? (Y/n)\033[0m ")
        if run == "Y" or run == "y":
            result = subprocess.run(command, shell=True, capture_output=True, text=True)
            if result.returncode == 0:
                print(f"\033[32m{result.stdout}\033[0m")
            else:
                print(f"\033[31m{result.stderr}\033[0m")


